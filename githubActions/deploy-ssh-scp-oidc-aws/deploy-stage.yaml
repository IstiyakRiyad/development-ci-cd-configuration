name: Deploy to AWS EC2

# workflow_dispatch is for manual running workflows.
# It will also trigger for push to main branch
on:
  workflow_dispatch:
  push:
    branches:
      - "main"

# Environment Variable which will be visible on github actions workflows
env:
  # Server Config
  AWS_EC2_USER: ubuntu
  AWS_EC2_URL: api.englishmojabd.com
  AWS_EC2_PATH: /home/ubuntu/server
  RESTART_FILE_PATH: restart_service.sh
  # OIDC
  AWS_REGION: ap-south-1
  AWS_ROLE_ASSUME: arn:aws:iam::123456789100:role/my-github-actions-role
  AWS_SESSION_NAME: MySessionName
  # Security Group
  AWS_SG_ID: sg-053666ef793d74f8d

# Jobs are set of operation that will be performed on github actions
jobs:
  # This is the deploy job
  deploy:
    runs-on: ubuntu-latest  # Envrironment to run the workflow
    steps:
      # This will setup the github repository on the runner.
      - name: Checkout
        uses: actions/checkout@v3

      # Setting AWS Credentials for OIDC
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{env.AWS_REGION}}
          role-to-assume: ${{env.AWS_ROLE_ASSUME}}
          role-session-name: ${{env.AWS_SESSION_NAME}}
      
      # Fetch IP address of github runner
      - name: Get IP address of runner 
        run: |
          myIP=$(dig +short myip.opendns.com @resolver1.opendns.com)

      # Open ssh port for a ip
      - name: Add Github Actions IP to Security group
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{env.AWS_SG_ID}} --protocol tcp --port 22 --cidr $myIP/32    
        
      # Setting the SSH keys to the runner
      - name: Setting SSH Keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{secrets.AWS_EC2_SSH_KEY}}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{env.AWS_EC2_URL}} > ~/.ssh/known_hosts

      # Copy all the github files to the remote machine in a specific folder
      - name: Copy all files to EC2 
        run: |
          scp -r ./* ${{ env.AWS_EC2_USER }}@${{ env.AWS_EC2_URL }}:${{env.AWS_EC2_PATH}}

      # Run the remote host command for setup
      - name: Restart Node Service 
        run: |
          ssh ${{ env.AWS_EC2_USER }}@${{ env.AWS_EC2_URL }} 'bash -s' < ${{env.RESTART_FILE_PATH}}


      # Remove IP from security group
      - name: Remove Github Actions IP from security group
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{env.AWS_SG_ID}} --protocol tcp --port 22 --cidr $myIP/32
        